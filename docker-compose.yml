version: '3.5'

services:
  codenip-sf-doctrine-web:
    container_name: codenip-sf-doctrine-web
    build:
      context: ./docker/nginx
      args:
        UID: $U_ID
    ports:
      - "1000:80"
    volumes:
      - ./public:/appdata/www/public
    depends_on:
      - codenip-sf-doctrine-be
    networks:
      - codenip-sf-doctrine-network

  codenip-sf-doctrine-be:
    container_name: codenip-sf-doctrine-be
    build:
      context: docker/php
      args:
        UID: $U_ID
    volumes:
      - ./:/appdata/www
    ###> XDEBUG 3 ###
    # Use your client IP here
    # Linux: run "ip a | grep docker0"
    # Windows (with WSL2) and Mac: host.docker.internal
    environment:
      XDEBUG_CLIENT_HOST: host.docker.internal
      XDEBUG_CLIENT_PORT: 9003
      PHP_IDE_CONFIG: serverName=codenip-sf-doctrine
    networks:
      - codenip-sf-doctrine-network

  codenip-sf-doctrine-db:
    container_name: codenip-sf-doctrine-db
    build:
      context: ./docker/database
    ports:
      - "36000:3306"
    environment:
      MYSQL_DATABASE: symfony-doctrine
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - codenip-sf-doctrine-db-data:/var/lib/mysql
    networks:
      - codenip-sf-doctrine-network
    command: ['mysqld', '--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci']
  
  #codenip-sf-doctrine-db-postgres:
    #image: postgres:13.3
    #container_name: "demo_uno_postgres"
    #environment:
      #- POSTGRES_USER=postgres
      #- POSTGRES_PASSWORD=postgres
      #- POSTGRES_DB=postgres
    #ports:
      #- "5432:5432"
    #networks:
      #- codenip-sf-doctrine-network
    #volumes:
      #- codenip-sf-doctrine-db-data-postgres:/var/lib/postgresql/data

  codenip-sf-doctrine-phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: codenip-sf-doctrine-phpmyadmin
    restart: always
    networks:
      - codenip-sf-doctrine-network
    ports:
        - "1010:80"
    environment:
      # arbitrary server option - allowing you to specify any MySQL/MariaDB server on the login page
      #- PMA_ARBITRARY=1
      - PMA_HOST=codenip-sf-doctrine-db
      - PMA_USER=root
      - PMA_PASSWORD=root
    depends_on:
      - codenip-sf-doctrine-db

volumes:
  codenip-sf-doctrine-db-data:
  codenip-sf-doctrine-db-data-postgres:

networks:
  codenip-sf-doctrine-network:
    external: true
